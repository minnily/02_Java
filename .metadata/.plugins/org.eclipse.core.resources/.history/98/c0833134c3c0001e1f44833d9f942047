package edu.kh.variable.ex1;

public class VariableExample2 {
	
	public static void main(String[] args) {
		
		/* 자바 기본 자료형 8가지
		 * 
		 * 논리형 : boolean(1byte)
		 * 정수형 : byte(1byte), short(2byte), int(4byte), long(8byte)
		 * 실수형 : float(4byte), double(8byte)
		 * 문자형 : chat(2byte, 유니코드)
		 * */
		
		// 변수 선언 : 메모리에 값을 저장할 공간을 할당하는 것.
		// 변수 값 대입 : 변수에 값을 집어 넣는 것.
		
		
		// * 카멜 표기법 : 연결되는 두 단어 중 후속단어의 첫 문자를 대문자로 표기하는 방법
		
	
		boolean booleanData;
		// 메모리에 논리값(t/f)을 저장할 공간을 1byte 할당하고 할당된 공간을 booleanData 라고 부르겠다.
		
		booleanData = true; //booleanData 변수에 true; 값을 집어 넣기 
		
		
		System.out.println("booleanData :" + booleanData);
		
		
		
		
		byte byteNumber = 127;// byte가 최대로 표현할 수 있는 값은 127이기에 128을 넣으면 에러가 발생
		//메모리 정수 값을 저장할 공간을 1byte 할당하고 할당된 공간을 bytrNumber라고 부르겠다. 
		//선언된byteNumber 변수에 처음으로 127을 넣음. ---> 초기화 (처음 변수에 값을 대입)
		
		System.out.println("byteNumber : " + byteNumber);
		
		short shortNumber =32767;
		
		//정수 자료형의 기본형!(short, byte 옛날 코드 잔재)
		int intNumber =2147483647;
		//int :자료형 , intNumber :변수 명 ,값 : 2147483647) 리터럴
		// 프로그래밍에서는 대입되는 이 데이터(값자체)를 리터럴 이라는 단어로도 표현합니다.
		//** 리터럴: 변수에 대입되거나 작성되어지는 값자체 + 자료형에 따라 리터럴 표기법이 다름.
		
		
		
		long longNumber =10000000000L; //리터널 뒤에 l또는 L을 붙여 let이 아닌 long이라는 것을 명시해준다
		//  The literal 10000000000 of type int out of range
		//-> 100억 이라는 값은 int의 범위를 벗어났다. 뒤에 L을 붙여줌으로써 long 자료형인 것을 나타냄.
		
		
		float floatNumber =1.12345;
		
		
 	}
}
